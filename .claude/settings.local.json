{
  "permissions": {
    "allow": [
      "Bash(for file in C:/01_Programmieren/03_Trading_Bot_Professional/v8/*.py)",
      "Bash(done)",
      "Bash(for file in C:/01_Programmieren/03_Trading_Bot_Professional/v8/MEXC_Validation/*.py)",
      "Bash(python:*)",
      "Bash(taskkill:*)",
      "Bash(dir:*)",
      "Bash(grep:*)",
      "Bash(pip show:*)",
      "Bash(pip install:*)",
      "Bash(xcopy:*)",
      "Bash(robocopy:*)",
      "Bash(powershell:*)",
      "Bash(del C:01_Programmieren03_Trading_Bot_Professionalv9anchor_config.txt)",
      "Read(//c/01_Programmieren/03_Trading_Bot_Professional/**)",
      "Bash(del \"C:\\01_Programmieren\\03_Trading_Bot_Professional\\v10\\drop_anchors.json\")",
      "Bash(find:*)",
      "Bash(chcp:*)",
      "Bash(timeout:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(cut:*)",
      "mcp__ide__getDiagnostics",
      "Bash(chmod:*)",
      "Bash(mkdir:*)",
      "Bash(findstr:*)",
      "Bash(git log:*)",
      "Bash(python3:*)",
      "Bash(for method in \"_initialize_services\" \"_main_loop\" \"start\" \"stop\" \"_evaluate_buy_signal\" \"_execute_buy_order\" \"_manage_positions\" \"_process_exit_signals\" \"add_manual_position\" \"exit_position\" \"get_positions\" \"get_pnl_summary\" \"_backfill_market_history\" \"_initialize_startup_services\")",
      "Bash(do)",
      "Bash(if grep -q \"def $method\" engine_legacy.py)",
      "Bash(then)",
      "Bash(if grep -rq \"def $method\" engine/)",
      "Bash(echo:*)",
      "Bash(else)",
      "Bash(echo \"‚ùå $method - FEHLT!\")",
      "Bash(fi)",
      "Bash(if grep -q \"_backfill_market_history\" engine/engine.py)",
      "Bash(then echo \"‚úÖ vorhanden\")",
      "Bash(else echo \"‚ùå FEHLT - sollte erg√§nzt werden\")",
      "Bash(if grep -q \"_initialize_startup_services\" engine/engine.py)",
      "Bash(for func in \"place_limit_ioc_buy\" \"place_ioc_ladder_no_market\" \"place_limit_ioc_sell_ladder\" \"place_ioc_sell_with_depth_sweep\" \"place_market_ioc_buy_with_coid\" \"poll_order_canceled\" \"place_safe_market_sell\" \"safe_create_limit_sell_order\")",
      "Bash(if grep -q \"^def $func\" trading_legacy.py)",
      "Bash(if grep -rq \"^def $func\" trading/)",
      "Bash(for func in \"_initialize_startup_services\" \"_backfill_market_history\" \"poll_order_canceled\" \"place_safe_market_sell\")",
      "Bash(if grep -rq \"def $func\" engine/ trading/)",
      "Read(//tmp/**)",
      "Bash(for file in buy_decision.py exit_handler.py position_manager.py monitoring.py)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(tree:*)",
      "Bash(cat:*)",
      "Bash(git push:*)",
      "Bash(pip3 install:*)",
      "Bash(brew install:*)",
      "Bash(/opt/homebrew/bin/python3.12:*)",
      "Bash(source:*)",
      "Bash(for:*)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Read(//Users/stenrauch/Library/**)",
      "Bash(vm_stat)",
      "Bash(system_profiler:*)",
      "Bash(top:*)",
      "Bash(./venv/bin/python -m pip list:*)",
      "Bash(sort:*)",
      "Bash(xargs:*)",
      "Bash(associated with a value\" f√ºhrt.\n\nL√∂sung: Redundantes lokales Import in Zeile 144 entfernt. Das globale\nImport auf Modul-Ebene reicht aus.\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
